spring:
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          client-id: '{cipher}8ac1ddb255e6a27ff148975a27230e8f5bcef1eec3d543b29355b2f4d9b7adf8'
          client-secret: '{cipher}b9d820a7ffe940fe6d8f20a412227f9ce7910093bcd9d8fc0b46d0fcc2ae34f2'
  datasource:
    url: jdbc:postgresql://127.0.0.1:5497/company
    username: '{cipher}caae981b1d51d27216a8532918141337887a0dabf56021dfb9c459e52b3c5fcb'
    password: '{cipher}f814a1a8da16687729a2ece16330d03d379c714e2242fc65b18d81ed017c3af5'
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092,localhost:9093
eureka:
  instance:
    hostname: host.docker.internal
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
qr-cache:
  redis:
    server:
      host: localhost
      port: 6397
      user: '{cipher}3f40c21252093eaf20ebc72ca5a6dc9ada3f69f2e2c1a78c0f4f4bc321f3dc81'
      password: '{cipher}9a0a1472f2ccd752e4a17cf99d10925913cf6cce0c6e1d21b201da5de0a2ddd4'
