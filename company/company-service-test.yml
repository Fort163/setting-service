spring:
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          client-id: '{cipher}3224c0b03f1c2cc98332d14ad33e6b9d83d0cf460fd8ed464c9eff60df41193d'
          client-secret: '{cipher}bfc0b7cf697ff678d5adad7b47f5481c5e521953089340b92d6326eca95334a5'
  datasource:
    url: jdbc:postgresql://127.0.0.1:5497/test-company
    username: '{cipher}a4fed5c3f81b8517f3933c3e67c98ed2b2ae326da42711c3ead3683b539ea253'
    password: '{cipher}fa6dc85354e322a187be312a74e923a41511946878a577720a8b98c4a1124d07'
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092,localhost:9093
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
qr-cache:
  enabled: true
  redis:
    server:
      host: localhost
      port: 6397
      user: '{cipher}3f40c21252093eaf20ebc72ca5a6dc9ada3f69f2e2c1a78c0f4f4bc321f3dc81'
      password: '{cipher}13d4388bb8b9e5e04b15918e349902097b0a1b764f2de5fb512c3211edc79302'

