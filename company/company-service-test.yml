spring:
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          client-id: '{cipher}2cc47a22927889f0a8111703b0a5cd8e52a4e55d954645ef9c86f4e08b866876'
          client-secret: '{cipher}2cc47a22927889f0a8111703b0a5cd8e52a4e55d954645ef9c86f4e08b866876'
  datasource:
    url: jdbc:postgresql://127.0.0.1:5497/test-company
    username: '{cipher}20ec1263aab80c0ef90d2d02f1fe5c1e24ea473193f6e97c4f58cde8ea818b63'
    password: '{cipher}b8fa94af189ce65c24dc6fc6249eaaaca57868961e382b7899c5d4e621f12a52'
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092,localhost:9093
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
qr-cache:
  enabled: true
  redis:
    server:
      host: localhost
      port: 6397
      user: '{cipher}5e1cb909cdf1d3b4aaca5652948d81b904e42e403c172fc5196e4f5d9c0b6a0f'
      password: '{cipher}0da01582604a7ee1a905de67091a6f2c7f2917c84810d5f467e958376fe13af0'

