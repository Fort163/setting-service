server:
  port: ${SERVER_PORT:8010}
spring:
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          client-id: '{cipher}114c81cc3f2faaa18afaacfa5d9be69ddc92e5f129864fd9f8fd937bcd01030e'
          client-secret: '{cipher}114c81cc3f2faaa18afaacfa5d9be69ddc92e5f129864fd9f8fd937bcd01030e'
          custom-auth: ${SECURITY_CUSTOM_AUTH:true}
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: ${GATEWAY_ALLOWED_ORIGINS:[http://localhost:3001]}
            allowedMethods: ${GATEWAY_ALLOWED_METHODS:*}
            allowedHeaders: ${GATEWAY_ALLOWED_HEADERS:*}
eureka:
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL:http://localhost:8761/eureka}
management:
  health:
    circuitbreakers:
      enabled: ${ACTUATOR_CIRCUITBREAKERS_HEALTH:true}
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_VALUES:ALWAYS}
    env:
      show-values: ${ACTUATOR_ENV_VALUES:ALWAYS}
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: ${RESILIENCE4J_CIRCUITBREAKERS_HEALTH:true}
    service:
      failureRateThreshold: ${SERVICE_RESILIENCE4J_FAILURE_RATE_THRESHOLD:50}
      slidingWindowSize: ${SERVICE_RESILIENCE4J_SLIDING_WINDOW_SIZE:5}
      minimumNumberOfCalls: ${SERVICE_RESILIENCE4J_MINIMUM_NUMBER_OF_CALLS:20}
  instances:
    companyService:
      baseConfig: service
    userService:
      baseConfig: service
    notificationService:
      baseConfig: service
gateway:
  logger: ${GATEWAY_LOGER_URL:true}
  locale:
    enabled: ${GATEWAY_LOCALE_ENABLED:true}
