server:
  port: ${SERVER_PORT}
spring:
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          client-id: ${SECURITY_CLIENT_ID}
          client-secret: ${SECURITY_CLIENT_SECRET}
          custom-auth: ${SECURITY_CUSTOM_AUTH}
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: ${GATEWAY_ALLOWED_ORIGINS}
            allowedMethods: ${GATEWAY_ALLOWED_METHODS}
            allowedHeaders: ${GATEWAY_ALLOWED_HEADERS}
      routes:
        - id: company-service
          uri: lb://company-service
          predicates:
            - Path=/company/**
          filters:
            - RewritePath=/company/(?<path>.*), /$\{path}
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<path>.*), /$\{path}
        - id: qr-b2b-service
          uri: lb://qr-b2b-service
          predicates:
            - Path=/qr-b2b/**
          filters:
            - RewritePath=/qr-b2b/(?<path>.*), /$\{path}
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
eureka:
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL}
management:
  health:
    circuitbreakers:
      enabled: ${ACTUATOR_CIRCUITBREAKERS_HEALTH}
  endpoints:
    web:
      exposure:
        include:
          - health
          - env
          - info
          - liquibase
          - refresh
          - gateway
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: ${ACTUATOR_HEALTH_VALUES}
    env:
      show-values: ${ACTUATOR_ENV_VALUES}
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: ${RESILIENCE4J_CIRCUITBREAKERS_HEALTH}
    service:
      failureRateThreshold: ${SERVICE_RESILIENCE4J_FAILURE_RATE_THRESHOLD}
      slidingWindowSize: ${SERVICE_RESILIENCE4J_SLIDING_WINDOW_SIZE}
      minimumNumberOfCalls: ${SERVICE_RESILIENCE4J_MINIMUM_NUMBER_OF_CALLS}
  instances:
    companyService:
      baseConfig: service
    userService:
      baseConfig: service
    notificationService:
      baseConfig: service
gateway:
  logger: ${GATEWAY_LOGER_URL}
  locale:
    enabled: ${GATEWAY_LOCALE_ENABLED}
