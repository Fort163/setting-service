server:
  port: ${SERVER_PORT:8050}
spring:
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          client-id: ${SECURITY_CLIENT_ID}
          client-secret: ${SECURITY_CLIENT_SECRET}
          custom-auth: ${SECURITY_CUSTOM_AUTH:true}
  mail:
    host: ${MAIL_HOST:smtp.yandex.ru}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    port: ${MAIL_PORT:465}
    protocol: ${MAIL_PROTOCOL:smtps}
    from: ${MAIL_FROM:quickrecording@yandex.ru}
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: ${JPA_SHOW_SQL:false}
    database-platform: ${JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
  liquibase:
    change-log: ${LIQUIBASE_CHANGE_LOG:classpath:db/changelog/db.changelog-master.xml}
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${STREAM_KAFKA_PORTS}
eureka:
  instance:
    preferIpAddress: true
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL}
management:
  health:
    circuitbreakers:
      enabled: ${ACTUATOR_CIRCUITBREAKERS_HEALTH:true}
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_VALUES:ALWAYS}
    env:
      show-values: ${ACTUATOR_ENV_VALUES:ALWAYS}
  endpoints:
    web:
      exposure:
        include:
          - health
          - env
          - info
          - liquibase
          - refresh
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: ${RESILIENCE4J_CIRCUITBREAKERS_HEALTH:true}
    service:
      failureRateThreshold: ${SERVICE_RESILIENCE4J_FAILURE_RATE_THRESHOLD:50}
      slidingWindowSize: ${SERVICE_RESILIENCE4J_SLIDING_WINDOW_SIZE:5}
      minimumNumberOfCalls: ${SERVICE_RESILIENCE4J_MINIMUM_NUMBER_OF_CALLS:20}
  instances:
    database:
      failureRateThreshold: ${DB_RESILIENCE4J_FAILURE_RATE_THRESHOLD:75}
      slidingWindowSize: ${DB_RESILIENCE4J_SLIDING_WINDOW_SIZE:4}
      minimumNumberOfCalls: ${DB_RESILIENCE4J_MINIMUM_NUMBER_OF_CALLS:20}
gateway:
  logger: ${GATEWAY_LOGER_URL:true}
  locale:
    enabled: ${GATEWAY_LOCALE_ENABLED:true}
notification:
  mail: ${NOTIFICATION_MAIL}
  ws:
    host: ${NOTIFICATION_RABBIT_HOST}
    port: ${NOTIFICATION_RABBIT_PORT}
    login: ${NOTIFICATION_RABBIT_LOGIN}
    password: ${NOTIFICATION_RABBIT_PASSWORD}
    allowedOrigins: ${NOTIFICATION_WS_ORIGINS}
qr-cache:
  enabled: ${QR_CACHE_ENABLED:true}
  redis:
    server:
      host: ${QR_REDIS_SERVER_HOST}
      port: ${QR_REDIS_SERVER_PORT}
      user: ${QR_REDIS_SERVER_USER}
      password: ${QR_REDIS_SERVER_PASSWORD}
